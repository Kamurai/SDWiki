<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE HTML>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
    <h:head />
    <h:body>
        <title>
            <h:outputText value="#{NASShinobiBean.getShinobi().getName()} " escape="true" /> <h:outputText value="#{NASShinobiBean.getShinobi().getVersion()}" escape="true" />
        </title>
        <h2>
            <h:outputText value="#{NASShinobiBean.getShinobi().getName()} " escape="true" /> <h:outputText value="#{NASShinobiBean.getShinobi().getVersion()}" escape="true" />
        </h2>
        <div id="idCenterContent">
            <div>
                <div class="cardPictureContainer">
                    <!-- Front of Card -->
                    <img class="cardPicture" src="#{NASShinobiBean.getShinobi().getPictureFront()}"/>
                </div>
                <div class="cardPictureContainer">
                    <!-- Back of Card -->
                    <img class="cardPicture" src="#{NASShinobiBean.getShinobi().getPictureBack()}"/>
                </div>
            </div>
            <div>
                <div class="standiePictureContainer">
                    <!-- Front of Standie -->
                    <img class="standiePicture" src="#{NASShinobiBean.getShinobi().getStandieFront()}"/>
                </div>
                <div class="standiePictureContainer">
                    <!-- Back of Standie -->
                    <img class="standiePicture" src="#{NASShinobiBean.getShinobi().getStandieBack()}"/>
                </div>
            </div>
            
            <!-- replace with table -->
            <div>
                <div>
                    <div class="inline">
                        Card Type: <h:outputText value="#{NASShinobiBean.getShinobi().getCardType()}" escape="false" />
                    </div>
                    <div class="inline">
                        Version: <h:outputText value="#{NASShinobiBean.getShinobi().getVersion()}" escape="false" />
                    </div>
                </div>
                <div>
                    <div class="inline">
                        Creature Type: <h:outputText value="#{NASShinobiBean.getShinobi().getCreatureType()}" escape="false" />
                    </div>
                    <div class="inline">
                        Product Module: <h:outputText value="#{NASShinobiBean.getShinobi().getModule()}" escape="false" />
                    </div>
                </div>
                <div>
                    <div class="inline">
                        Model Size: <h:outputText value="#{NASShinobiBean.getShinobi().getModelSize()}" escape="false" />
                    </div>
                    <div class="inline">
                        Gender: <h:outputText value="#{NASShinobiBean.getShinobi().getGender()}" escape="false" />
                    </div>
                </div>
            </div>
            
            <div>
                 <div class="inline">
                     Movement: <h:outputText value="#{NASShinobiBean.getShinobi().getMovement()}" escape="false" />
                 </div>
            </div>
            <div>
                <div class="inline">
                    <div>Attack: #{NASShinobiBean.getShinobi().getAttack()}</div>
                    <div>Range: #{NASShinobiBean.getShinobi().getAttackRange()}</div>
                    <div>Range Description: #{NASShinobiBean.getShinobi().getRangeDescription()}</div>
                    <div>Defense: #{NASShinobiBean.getShinobi().getDefense()}</div>
                    <div>Koban: #{NASShinobiBean.getShinobi().getKoban()}</div>
                    <div>Upkeep #{NASShinobiBean.getShinobi().getUpkeep()}</div>
                </div>
            </div>
            
             <!-- List of Affinities -->
            <ui:fragment rendered="#{NASShinobiBean.getShinobi().validateAffinityList()}">
                <ui:fragment rendered="#{NASShinobiBean.getShinobi().getAffinities().size() == 1}">
                    <div>Affinity:</div>
                </ui:fragment>
                <ui:fragment rendered="#{NASShinobiBean.getShinobi().getAffinities().size() > 1}">
                    <div>Affinities:</div>
                </ui:fragment>
                
                <ui:repeat var="x" value="#{NASShinobiBean.getShinobi().getAffinity()}" size="#{NASShinobiBean.getShinobi().getAffinities().size()}" varStatus="myVarStatus" >
                    <ui:fragment rendered="#{x.validateAffinity()}">
                        <div class="inline">
                            <h:outputText value="#{NASShinobiBean.getShinobi().getAffinity()}" escape="false" />
                        </div>
                    </ui:fragment>
                </ui:repeat>
                <br/>
            </ui:fragment>
            <br/>
            
            <!-- List of Keywords -->
            <ui:fragment rendered="#{NASShinobiBean.getShinobi().validateKeywordList()}">
                <div>Keywords:</div>
                <ui:repeat var="x" value="#{NASShinobiBean.getShinobi().getKeywords()}" size="#{NASShinobiBean.getShinobi().getKeywords().size()}" varStatus="myVarStatus" >
                    <ui:fragment rendered="#{x.validateKeyword()}">
                        <ui:include src="/Content/Keyword.xhtml">
                            <ui:param name="keyword" value="x"/>
                        </ui:include>
                    </ui:fragment>
                </ui:repeat>
                <br/>
            </ui:fragment>
            
            <ui:fragment rendered="#{ NASShinobiBean.getShinobi().validateFlavor() }">
                <div>
                    Flavor Text: <h:outputText value="#{NASShinobiBean.getShinobi().getFlavor()}" escape="false" />
                </div>
            </ui:fragment>
            <ui:fragment rendered="#{NASShinobiBean.getShinobi().isCustom()}">
                <div>
                    Author: <h:outputText value="#{NASShinobiBean.getShinobi().getAuthor()}" escape="false" />
                </div>
                <div>
                    Source: <h:outputText value="#{NASShinobiBean.getShinobi().getSourceURL()}" escape="false" />
                </div>
            </ui:fragment>
        </div>
    </h:body>
</html>

